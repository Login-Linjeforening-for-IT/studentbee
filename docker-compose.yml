services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    depends_on:
      - postgres


  backend:
    container_name: backend
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    command: npm start
    depends_on:
      - postgres
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
  
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - API_URL=http://backend:8080/api

  postgres:
    image: postgres:18
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-studentbee}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB:-studentbee}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U studentbee -d studentbee"]
      interval: 10s
      retries: 5

volumes:
  postgres_data: